<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>跟着流年去旅行的个人博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-08-04T15:15:45.542Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>feng shuan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>react-native开发过程梳理</title>
    <link href="http://yoursite.com/2019/08/04/react-native%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B%E6%A2%B3%E7%90%86/"/>
    <id>http://yoursite.com/2019/08/04/react-native开发过程梳理/</id>
    <published>2019-08-04T15:02:28.000Z</published>
    <updated>2019-08-04T15:15:45.542Z</updated>
    
    <content type="html"><![CDATA[<p>之前在用 rn 开发跨平台应用时，仅是开发环境配置（运行基础的 hello world），就耗费了我大量的时间，今天整理一下，希望给打算入 rn 神坑的小伙伴一个指引（我已弃坑，准备去搞 flutter 了）。以下是 windows 平台的，mac 平台请绕路。。</p><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><blockquote><p>配置可参考<code>https://reactnative.cn/docs/0.40/getting-started.html</code> <code>https://reactnative.cn/docs/getting-started.html</code> <code>https://facebook.github.io/react-native/docs/getting-started</code></p></blockquote><a id="more"></a><p>1、下载<code>Chocolatey</code>(windows 包管理器)，用于安装<code>python2</code>、<code>jdk8</code>、<code>node</code>。安装方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@powershell -NoProfile -ExecutionPolicy Bypass -Command &quot;iex ((new-object net.webclient).DownloadString(&apos;https://chocolatey.org/install.ps1&apos;))&quot; &amp;&amp; SET PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin</span><br></pre></td></tr></table></figure><ul><li>jdk 安装与环境变量配置: <code>https://jingyan.baidu.com/article/6dad5075d1dc40a123e36ea3.html</code></li></ul><p>2、设置 npm 镜像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org --global</span><br><span class="line">npm config set disturl https://npm.taobao.org/dist --global</span><br></pre></td></tr></table></figure><p>3、安装 React Native 的命令行工具（react-native-cli）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g react-native-cli</span><br></pre></td></tr></table></figure><p>4、 android studio 安装(下载地址: <code>https://developer.android.google.cn/</code>)<br>安装界面中选择“custom”选项，确保选中了以下几项:</p><ul><li>Android SDK</li><li>Android SDK Platform</li><li>Performance (Intel ® HAXM)</li><li>Android Virtual Device</li></ul><p>5、ANDROID_HOME 环境变量配置</p><p>6、将 Android SDK 的 Tools 目录添加到 PATH 变量中<br>可以把 Android SDK 的 tools 和 platform-tools 目录添加到 PATH 变量中，以便在终端中运行一些 Android 工具</p><p>7、创建新项目<br>使用 React Native 命令行工具来创建一个名为”AwesomeProject”的新项目：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">react-native init AwesomeProject --version 0.55.4</span><br></pre></td></tr></table></figure><p>8、下载夜神模拟器<br>模拟器相关配置可参考<code>https://www.cnblogs.com/piaobodewu/p/9786513.html</code></p><ul><li>启动模拟器</li><li>cmd 进入夜神模拟器安装目录的 bin 目录下<code>D:\Program Files\Nox\bin</code>执行<code>nox_adb devices</code>，然后应该就有模拟器的名字了，一般都是 127.0.0.1:62001</li><li>cmd 进去 android 的 SDK 的 platform-tools 目录下<code>D:\android_sdk\platform-tools</code>执行命令<code>adb.exe connect 127.0.0.1:62001</code>连接模拟器</li><li>进入项目根目录将项目打包安装到模拟器<code>react-native run-android</code></li></ul><p>9、启动项目(项目根目录打包安装到模拟器)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">react-native run-android</span><br></pre></td></tr></table></figure><p>初始化项目运行可能会遇见的问题</p><ul><li>真机红屏报错: <code>https://www.cnblogs.com/piaobodewu/p/9889460.html</code></li><li>创建工程 gradle-2.4-all 包下载问题: <code>https://blog.csdn.net/u010411264/article/details/53636956</code></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前在用 rn 开发跨平台应用时，仅是开发环境配置（运行基础的 hello world），就耗费了我大量的时间，今天整理一下，希望给打算入 rn 神坑的小伙伴一个指引（我已弃坑，准备去搞 flutter 了）。以下是 windows 平台的，mac 平台请绕路。。&lt;/p&gt;
&lt;h2 id=&quot;环境配置&quot;&gt;&lt;a href=&quot;#环境配置&quot; class=&quot;headerlink&quot; title=&quot;环境配置&quot;&gt;&lt;/a&gt;环境配置&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;配置可参考&lt;code&gt;https://reactnative.cn/docs/0.40/getting-started.html&lt;/code&gt; &lt;code&gt;https://reactnative.cn/docs/getting-started.html&lt;/code&gt; &lt;code&gt;https://facebook.github.io/react-native/docs/getting-started&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="前端技术" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="react-native" scheme="http://yoursite.com/tags/react-native/"/>
    
  </entry>
  
  <entry>
    <title>vue路由动态权限控制</title>
    <link href="http://yoursite.com/2019/08/04/vue%E8%B7%AF%E7%94%B1%E5%8A%A8%E6%80%81%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6/"/>
    <id>http://yoursite.com/2019/08/04/vue路由动态权限控制/</id>
    <published>2019-08-04T07:54:12.000Z</published>
    <updated>2019-08-04T10:04:38.754Z</updated>
    
    <content type="html"><![CDATA[<p>前一段时间公司做了一个 oa 系统，涉及到菜单权限相关的。经过调研（又称 google），发现 vue2.2.0 之后添加的 addRoutes 功能甚是好用。整个过程踩了很多坑，因此简单整理了以下。</p><h3 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h3><ul><li>创建 vue 实例的时候将 vue-router 挂载，但这个时候 vue-router 挂载一些登录或者不用权限的公用的页面</li><li>当用户登录后，获取用户角色 role，将 role 和路由表的每个页面需要的权限作比较，生成最终用户可访问的路由表</li><li>调用 router.addRoutes(store.getters.addRouters)添加用户可访问的路由</li><li>使用 vuex 管理路由表，根据 vuex 中可访问的路由渲染侧边栏组件<a id="more"></a></li></ul><h4 id="router-js"><a href="#router-js" class="headerlink" title="router.js"></a>router.js</h4><blockquote><p>通过<code>vue-router</code>官方的 meta 标签来标示该页面能访问的权限有哪些。比如<code>meta: { role: [&#39;admin&#39;,&#39;ceo&#39;] }</code>表示该页面只有 admin 和 ceo 才有进入的权限。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// router.js</span></span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span>;</span><br><span class="line"><span class="keyword">import</span> VueRouter <span class="keyword">from</span> <span class="string">"vue-router"</span>;</span><br><span class="line">Vue.use(VueRouter);</span><br><span class="line"><span class="keyword">import</span> Login <span class="keyword">from</span> <span class="string">'@/views/login'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//所有权限通用路由表</span></span><br><span class="line"><span class="comment">//如首页和登录页和一些不用权限的公用页面</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> constantRouterMap = [</span><br><span class="line">&#123; <span class="attr">path</span>: <span class="string">'/login'</span>, <span class="attr">component</span>: Login &#125;,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment">//异步挂载的路由</span></span><br><span class="line"><span class="comment">//动态需要根据权限加载的路由表</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> asyncRouterMap = [</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">"/achievements"</span>,</span><br><span class="line">    name: <span class="string">"achievements"</span>,</span><br><span class="line">    component: achievements,</span><br><span class="line">    children: [</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">"employeeAchievements"</span>,</span><br><span class="line">        name: <span class="string">"employeeAchievements"</span>,</span><br><span class="line">        component: <span class="function"><span class="params">()</span> =&gt;</span></span><br><span class="line">          <span class="keyword">import</span>(<span class="string">"@/views/achievements/components/employeeAchievements"</span>),</span><br><span class="line">        meta: &#123;</span><br><span class="line">          roles: [<span class="string">"ceo"</span>]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">"departmentAchievements"</span>,</span><br><span class="line">        name: <span class="string">"departmentAchievements"</span>,</span><br><span class="line">        component: <span class="function"><span class="params">()</span> =&gt;</span></span><br><span class="line">          <span class="keyword">import</span>(<span class="string">"@/views/achievements/components/departmentAchievements"</span>),</span><br><span class="line">        meta: &#123;</span><br><span class="line">          roles: [<span class="string">"department_head"</span>]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">"subordinateAchievements"</span>,</span><br><span class="line">        name: <span class="string">"subordinateAchievements"</span>,</span><br><span class="line">        component: <span class="function"><span class="params">()</span> =&gt;</span></span><br><span class="line">          <span class="keyword">import</span>(<span class="string">"@/views/achievements/components/subordinateAchievements"</span>),</span><br><span class="line">        meta: &#123;</span><br><span class="line">          roles: [<span class="string">"direct_supervisor"</span>, <span class="string">"project_manger"</span>, <span class="string">"general_manager"</span>]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">"strategyAchievements"</span>,</span><br><span class="line">        name: <span class="string">"strategyAchievements"</span>,</span><br><span class="line">        component: <span class="function"><span class="params">()</span> =&gt;</span></span><br><span class="line">          <span class="keyword">import</span>(<span class="string">"@/views/achievements/components/strategyAchievements"</span>),</span><br><span class="line">        meta: &#123;</span><br><span class="line">          roles: [<span class="string">"ceo"</span>]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">"personalAchievements"</span>,</span><br><span class="line">        name: <span class="string">"personalAchievements"</span>,</span><br><span class="line">        component: <span class="function"><span class="params">()</span> =&gt;</span></span><br><span class="line">          <span class="keyword">import</span>(<span class="string">"@/views/achievements/components/personalAchievements"</span>),</span><br><span class="line">        meta: &#123;</span><br><span class="line">          roles: [<span class="string">"employee"</span>]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">"projectAchievements"</span>,</span><br><span class="line">        name: <span class="string">"projectAchievements"</span>,</span><br><span class="line">        component: <span class="function"><span class="params">()</span> =&gt;</span></span><br><span class="line">          <span class="keyword">import</span>(<span class="string">"@/views/achievements/components/projectAchievements"</span>),</span><br><span class="line">        meta: &#123;</span><br><span class="line">          roles: [<span class="string">"project_manger"</span>, <span class="string">"general_manager"</span>]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">"*"</span>,</span><br><span class="line">    redirect: <span class="string">"/achievements"</span></span><br><span class="line">  &#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 实例化vue的时候只挂载constantRouterMap</span></span><br><span class="line"><span class="keyword">const</span> createRouter = <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">scrollBehavior: <span class="function"><span class="params">()</span> =&gt;</span> (&#123; <span class="attr">y</span>: <span class="number">0</span> &#125;),</span><br><span class="line">routes： constantRouterMap</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过addRoutes动态添加的路由，如何动态删除（用户权限变化或用户登出）</span></span><br><span class="line"><span class="comment">// 参考`https://juejin.im/post/5c92ff94f265da6128275a85#heading-4` `https://github.com/vuejs/vue-router/issues/1234#issuecomment-357941465`</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = createRouter()</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">resetRouter</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">const</span> newRouter = createRouter()</span><br><span class="line">router.matcher = newRouter.matcher</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><h4 id="main-js"><a href="#main-js" class="headerlink" title="main.js"></a>main.js</h4><blockquote><p>在<code>vue-router</code>的全局前置守卫<code>router.beforeEach</code>中获取用户对应权限信息，并用 addRoutes 动态添加可访问路由表</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// main.js</span></span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">"vue"</span>;</span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">"@/router"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">"./App.vue"</span>;</span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">"@/store"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> iView <span class="keyword">from</span> <span class="string">"iview"</span>;</span><br><span class="line">Vue.use(iView);</span><br><span class="line"></span><br><span class="line">router.beforeEach(<span class="keyword">async</span> (to, <span class="keyword">from</span>, next) =&gt; &#123;</span><br><span class="line">  <span class="comment">// to and from are both route objects. must call `next`.</span></span><br><span class="line">  <span class="keyword">const</span> hasRoles = store.state.user.roles &amp;&amp; store.state.user.roles.length &gt; <span class="number">0</span>; <span class="comment">// 判断是否有用户角色信息</span></span><br><span class="line">  <span class="keyword">if</span> (hasRoles) &#123;</span><br><span class="line">    <span class="comment">// 有用户权限信息，说明所有可访问路由已生成，如访问没权限页面会自动进入404页面</span></span><br><span class="line">    next();</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 没有用户权限信息，先拉取用户信息</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> roles = <span class="keyword">await</span> store.dispatch(<span class="string">"user/getInfo"</span>); <span class="comment">// 获取到用户权限信息</span></span><br><span class="line">      <span class="comment">// eslint-disable-next-line</span></span><br><span class="line">      <span class="keyword">const</span> accessRoutes = <span class="keyword">await</span> store.dispatch(</span><br><span class="line">        <span class="comment">// 生成可访问的路由表</span></span><br><span class="line">        <span class="string">"permission/generateRoutes"</span>,</span><br><span class="line">        roles</span><br><span class="line">      );</span><br><span class="line">      router.addRoutes(accessRoutes); <span class="comment">// 动态添加可访问路由表</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (to.name === <span class="string">"/"</span>) &#123;</span><br><span class="line">        next(&#123; <span class="attr">name</span>: <span class="string">"home"</span>, <span class="attr">replace</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        next(&#123; ...to, <span class="attr">replace</span>: <span class="literal">true</span> &#125;); <span class="comment">// hack方法 确保addRoutes已完成 ,set the replace: true so the navigation will not leave a history record</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(err);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line">router.afterEach(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">  iView.LoadingBar.finish();</span><br><span class="line">  <span class="built_in">window</span>.scrollTo(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="store-permission-js"><a href="#store-permission-js" class="headerlink" title="store/permission.js"></a>store/permission.js</h4><blockquote><p>通过用户的权限和之前在 router.js 里面 asyncRouterMap 的每一个页面所需要的权限做匹配，最后返回一个该用户能够访问路由有哪些</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// store/permission.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; constantRouterMap, asyncRouterMap &#125; <span class="keyword">from</span> <span class="string">"@/router"</span>; <span class="comment">// 引入静态路由和动态路由</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hasPermission</span>(<span class="params">roles, route</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 遍历判断是否有进入该页面的权限</span></span><br><span class="line">  <span class="keyword">if</span> (route.meta &amp;&amp; route.meta.roles) &#123;</span><br><span class="line">    <span class="keyword">return</span> roles.some(<span class="function"><span class="params">role</span> =&gt;</span> route.meta.roles.includes(role));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">deepCopy</span>(<span class="params">source</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 深拷贝</span></span><br><span class="line">  <span class="keyword">if</span> (!source) &#123;</span><br><span class="line">    <span class="keyword">return</span> source;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">let</span> sourceCopy = source <span class="keyword">instanceof</span> <span class="built_in">Array</span> ? [] : &#123;&#125;;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> item <span class="keyword">in</span> source) &#123;</span><br><span class="line">    sourceCopy[item] =</span><br><span class="line">      <span class="keyword">typeof</span> source[item] === <span class="string">"object"</span> ? deepCopy(source[item]) : source[item];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> sourceCopy;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">filterAsyncRoutes</span>(<span class="params">routes, roles</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 过滤生成可访问路由表</span></span><br><span class="line">  <span class="keyword">const</span> res = [];</span><br><span class="line">  routes.forEach(<span class="function"><span class="params">route</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> tmp = &#123; ...route &#125;;</span><br><span class="line">    <span class="keyword">if</span> (hasPermission(roles, tmp)) &#123;</span><br><span class="line">      <span class="keyword">if</span> (tmp.children) &#123;</span><br><span class="line">        tmp.children = filterAsyncRoutes(tmp.children, roles);</span><br><span class="line">      &#125;</span><br><span class="line">      res.push(tmp);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  namespaced: <span class="literal">true</span>,</span><br><span class="line">  state: &#123;</span><br><span class="line">    routes: deepCopy(constantRouterMap),</span><br><span class="line">    addRoutes: []</span><br><span class="line">  &#125;,</span><br><span class="line">  getters: &#123;&#125;,</span><br><span class="line">  mutations: &#123;</span><br><span class="line">    SET_ROUTES: <span class="function">(<span class="params">state, routes</span>) =&gt;</span> &#123;</span><br><span class="line">      state.addRoutes = routes;</span><br><span class="line">      state.routes = deepCopy(constantRouterMap.concat(routes));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  actions: &#123;</span><br><span class="line">    generateRoutes(&#123; commit &#125;, roles) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> accessedRoutes = filterAsyncRoutes(asyncRouterMap, roles);</span><br><span class="line">        commit(<span class="string">"SET_ROUTES"</span>, deepCopy(accessedRoutes));</span><br><span class="line">        resolve(accessedRoutes);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="store-user-js"><a href="#store-user-js" class="headerlink" title="store/user.js"></a>store/user.js</h4><blockquote><p>获取用户对应的 role 之前，需要先拿到 token。详细流程如下：</p></blockquote><ul><li>登录：当用户填写完账号和密码后向服务端验证是否正确，验证通过之后，服务端会返回一个 token，拿到 token 之后（我会将这个 token 存贮到 cookie 中，保证刷新页面后能记住用户登录状态），前端会根据 token 再去拉取一个 user_info 的接口来获取用户的详细信息（如用户权限，用户名等等信息）。</li><li>权限验证：通过 token 获取用户对应的 role，动态根据用户的 role 算出其对应有权限的路由，通过 router.addRoutes 动态挂载这些路由。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  namespaced: <span class="literal">true</span>,</span><br><span class="line">  state: &#123;</span><br><span class="line">    token: <span class="string">""</span>,</span><br><span class="line">    isHr: <span class="literal">true</span>,</span><br><span class="line">    roles: []</span><br><span class="line">  &#125;,</span><br><span class="line">  getters: &#123;&#125;,</span><br><span class="line">  mutations: &#123;</span><br><span class="line">    SET_TOKEN: <span class="function">(<span class="params">state, token</span>) =&gt;</span> &#123;</span><br><span class="line">      state.token = token;</span><br><span class="line">    &#125;,</span><br><span class="line">    SET_ROLES: <span class="function">(<span class="params">state, roles</span>) =&gt;</span> &#123;</span><br><span class="line">      state.roles = roles;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  actions: &#123;</span><br><span class="line">    getInfo(&#123; commit, state &#125;) &#123;</span><br><span class="line">      <span class="comment">// 获取用户信息接口，拿到服务端返回的token、用户名、用户权限等信息</span></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> rolesFromSeivice = [<span class="string">"ceo"</span>]; <span class="comment">// 从接口拿到的用户权限信息（用户角色）</span></span><br><span class="line">        commit(<span class="string">"SET_ROLES"</span>, rolesFromSeivice);</span><br><span class="line">        resolve(rolesFromSeivice);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前一段时间公司做了一个 oa 系统，涉及到菜单权限相关的。经过调研（又称 google），发现 vue2.2.0 之后添加的 addRoutes 功能甚是好用。整个过程踩了很多坑，因此简单整理了以下。&lt;/p&gt;
&lt;h3 id=&quot;具体实现&quot;&gt;&lt;a href=&quot;#具体实现&quot; class=&quot;headerlink&quot; title=&quot;具体实现&quot;&gt;&lt;/a&gt;具体实现&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;创建 vue 实例的时候将 vue-router 挂载，但这个时候 vue-router 挂载一些登录或者不用权限的公用的页面&lt;/li&gt;
&lt;li&gt;当用户登录后，获取用户角色 role，将 role 和路由表的每个页面需要的权限作比较，生成最终用户可访问的路由表&lt;/li&gt;
&lt;li&gt;调用 router.addRoutes(store.getters.addRouters)添加用户可访问的路由&lt;/li&gt;
&lt;li&gt;使用 vuex 管理路由表，根据 vuex 中可访问的路由渲染侧边栏组件
    
    </summary>
    
      <category term="前端技术" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>流年博客的Hello World</title>
    <link href="http://yoursite.com/2019/01/11/hello-world/"/>
    <id>http://yoursite.com/2019/01/11/hello-world/</id>
    <published>2019-01-11T14:38:57.670Z</published>
    <updated>2019-01-11T15:18:54.042Z</updated>
    
    <content type="html"><![CDATA[<h3 id="你好，我是流年，进阶全栈的路上···"><a href="#你好，我是流年，进阶全栈的路上···" class="headerlink" title="你好，我是流年，进阶全栈的路上···"></a>你好，我是流年，进阶全栈的路上···</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;你好，我是流年，进阶全栈的路上···&quot;&gt;&lt;a href=&quot;#你好，我是流年，进阶全栈的路上···&quot; class=&quot;headerlink&quot; title=&quot;你好，我是流年，进阶全栈的路上···&quot;&gt;&lt;/a&gt;你好，我是流年，进阶全栈的路上···&lt;/h3&gt;
      
    
    </summary>
    
    
  </entry>
  
</feed>
